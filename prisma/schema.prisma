// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  password       String        @db.Char(60)
  organizationId Int?
  isAdmin        Boolean       @default(false)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  createdAt      DateTime      @default(now()) @db.Timestamp(3)
}

model Address {
  id           Int            @id @default(autoincrement())
  country      String
  postal       String
  addressLine1 String
  addressLine2 String
  addressLine3 String?
  organization Organization[]
}

model Organization {
  id        Int     @id @default(autoincrement())
  name      String
  addressId Int
  address   Address @relation(fields: [addressId], references: [id])
  user      User[]

  Devices Devices[]
}

model Devices {
  id Int @id @default(autoincrement())
  uuid String @db.Uuid @unique
  token String 
  mac String
  name String
  firmwareVersion String 
  createdAt DateTime
  updatedAt DateTime
  organizationId Int
  organization Organization @relation(fields: [organizationId], references: [id])

  Geolocations Geolocations[]
}

model Geolocations {
  id Int @id @default(autoincrement())
  deviceId Int 
  device Devices @relation(fields: [deviceId], references: [id])
  longitude Float
  latitude Float
  addedAt DateTime @default(now()) @db.Timestamp(3)
}